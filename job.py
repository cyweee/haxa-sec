import re
import sys # Импортируем sys для вывода ошибок

# Компилируем регулярное выражение для эффективности
pattern = re.compile(r"^[A-Z]{3}\d{2}[-/]([a-zA-Z0-9]+)#\1[@$!][0-9a-fA-F]{3}$")

# Имя файла с флагами (убедитесь, что он так называется)
filename = '1.txt'
found_flag = None

try:
    with open(filename, 'r', encoding='utf-8') as f: # Добавим encoding='utf-8' на всякий случай
        print(f"Читаем файл '{filename}'...")
        line_number = 0
        for line in f:
            line_number += 1
            # Убираем пробельные символы с начала и конца строки
            flag_line = line.strip()

            # Проверяем основной формат haxagon{...}
            if flag_line.startswith("haxagon{") and flag_line.endswith("}"):
                # Извлекаем содержимое между скобками
                content = flag_line[8:-1]

                # Используем fullmatch для проверки полного соответствия содержимого шаблону
                if pattern.fullmatch(content):
                    if found_flag is None:
                        print(f"--- НАЙДЕН КАНДИДАТ (строка {line_number}) ---")
                        print(flag_line)
                        found_flag = flag_line
                        # Не прерываем поиск, чтобы убедиться, что он действительно один
                    else:
                        # Если нашли второй флаг, то что-то не так с условием или файлом
                        print(f"!!! ПРЕДУПРЕЖДЕНИЕ: Найден еще один подходящий флаг на строке {line_number}: {flag_line}")
                        print("По условию должен быть только один. Проверьте правила или файл.")
                        # Можно раскомментировать следующую строку, чтобы остановиться при нахождении второго
                        # sys.exit("Найдено больше одного флага, остановите выполнение.")


        if found_flag:
             print("\n--- Итоговый найденный флаг: ---")
             print(found_flag)
        else:
            print("\nФлаг, соответствующий ВСЕМ правилам, не найден.")
            print("Возможные причины:")
            print("- В файле 'flags.txt' нет флага, удовлетворяющего условиям.")
            print("- Ошибка в регулярном выражении или его интерпретации.")
            print("- Ошибка в файле 'flags.txt' (форматирование, кодировка).")

except FileNotFoundError:
    print(f"!!! ОШИБКА: Файл '{filename}' не найден в текущей директории.")
    print("Пожалуйста, убедитесь, что файл с таким именем существует и находится рядом со скриптом.")
except Exception as e:
    print(f"!!! Произошла непредвиденная ошибка: {e}")